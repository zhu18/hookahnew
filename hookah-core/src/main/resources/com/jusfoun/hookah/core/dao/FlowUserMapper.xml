<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jusfoun.hookah.core.dao.FlowUserMapper" >
  <resultMap id="BaseResultMap" type="com.jusfoun.hookah.core.domain.FlowUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="data_source" property="dataSource" jdbcType="SMALLINT" />
    <result column="new_user_num" property="newUserNum" jdbcType="INTEGER" />
    <result column="reg_user_num" property="regUserNum" jdbcType="INTEGER" />
    <result column="buy_goods" property="buyGoods" jdbcType="INTEGER" />
    <result column="person_user" property="personUser" jdbcType="INTEGER" />
    <result column="org_user" property="orgUser" jdbcType="INTEGER" />
    <result column="no_check_user" property="noCheckUser" jdbcType="INTEGER" />
    <result column="not_auth" property="notAuth" jdbcType="INTEGER" />
    <result column="repurchase" property="repurchase" jdbcType="INTEGER" />
    <result column="repurchase_rate" property="repurchaseRate" jdbcType="DOUBLE" />
    <result column="average_buy" property="averageBuy" jdbcType="DOUBLE" />
    <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="add_operator" property="addOperator" jdbcType="VARCHAR" />
    <result column="update_operator" property="updateOperator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, data_source, new_user_num, reg_user_num, buy_goods, person_user, org_user, no_check_user,
    not_auth, repurchase, repurchase_rate, average_buy, unit_price, add_time, update_time,
    add_operator, update_operator
  </sql>
  <insert id="insertAndGetId" useGeneratedKeys="true" keyProperty="id" parameterType="com.jusfoun.hookah.core.domain.FlowUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into flow_user (id, data_source, new_user_num, 
      reg_user_num, buy_goods, person_user, 
      org_user, no_check_user, not_auth, 
      repurchase, repurchase_rate, average_buy, 
      unit_price, add_time, update_time, 
      add_operator, update_operator)
    values (#{id,jdbcType=BIGINT}, #{dataSource,jdbcType=SMALLINT}, #{newUserNum,jdbcType=INTEGER}, 
      #{regUserNum,jdbcType=INTEGER}, #{buyGoods,jdbcType=INTEGER}, #{personUser,jdbcType=INTEGER}, 
      #{orgUser,jdbcType=INTEGER}, #{noCheckUser,jdbcType=INTEGER}, #{notAuth,jdbcType=INTEGER}, 
      #{repurchase,jdbcType=INTEGER}, #{repurchaseRate,jdbcType=DOUBLE}, #{averageBuy,jdbcType=DOUBLE}, 
      #{unitPrice,jdbcType=DOUBLE}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{addOperator,jdbcType=VARCHAR}, #{updateOperator,jdbcType=VARCHAR})
  </insert>

  <select id="selectSum" resultType="com.jusfoun.hookah.core.domain.vo.FlowUsersVo">
    select
    SUM(new_user_num) AS allNewUser,
    SUM(person_user) AS allPersonUser,
    SUM(org_user) AS allOrgUser
    from flow_user
    where add_time
    BETWEEN  #{startTime}
    AND DATE_ADD(#{endTime},INTERVAL 1 DAY)
  </select>

  <select id="selectBySource" resultType="com.jusfoun.hookah.core.domain.vo.FlowUsersVo">
    select

    SUM(new_user_num) AS allNewUser,
    SUM(person_user) AS allPersonUser,
    SUM(org_user) AS allOrgUser
    from flow_user
    where data_source = #{dataSource}
    and (add_time
    BETWEEN   #{startTime}
    AND DATE_ADD(#{endTime},INTERVAL 1 DAY))
  </select>

  <select id="selectBySourceList" resultType="com.jusfoun.hookah.core.domain.vo.FlowUsersVo">
    select
    fu.data_source AS dataSource,
	SUM(fu.new_user_num) AS allNewUser,
	SUM(fu.person_user) AS allPersonUser,
	SUM(fu.org_user) AS allOrgUser
    FROM
	flow_user fu
    where
    add_time
    BETWEEN   #{startTime}
    AND DATE_ADD(#{endTime},INTERVAL 1 DAY)
    GROUP BY
	fu.data_source
  </select>
</mapper>