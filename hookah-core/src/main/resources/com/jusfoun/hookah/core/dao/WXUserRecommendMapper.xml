<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jusfoun.hookah.core.dao.WXUserRecommendMapper" >
  <resultMap id="BaseResultMap" type="com.jusfoun.hookah.core.domain.WxUserRecommend" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="recommenderId" property="recommenderid" jdbcType="VARCHAR" />
    <result column="inviteeId" property="inviteeid" jdbcType="VARCHAR" />
    <result column="isdeal" property="isdeal" jdbcType="TINYINT" />
    <result column="isauthenticate" property="isauthenticate" jdbcType="TINYINT" />
    <result column="reward_money" property="rewardMoney" jdbcType="BIGINT" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, recommenderId, inviteeId, isdeal, isauthenticate, reward_money, add_time, update_time
  </sql>

    <!--<insert id="insertAndGetEntry" parameterType="com.jusfoun.hookah.core.domain.WxUserRecommend">-->
        <!--INSERT INTO wx_user_recommend-->
        <!--<trim prefix="(" suffix=")" suffixOverrides=",">-->
            <!--<if test="recommenderId != null">-->
                <!--recommenderId,-->
            <!--</if>-->
            <!--<if test="inviteeid != null">-->
                <!--inviteeId,-->
            <!--</if>-->
            <!--<if test="isdeal != null">-->
                <!--isdeal,-->
            <!--</if>-->
            <!--<if test="isauthenticate != null">-->
                <!--isauthenticate,-->
            <!--</if>-->
            <!--<if test="rewardMoney != null">-->
                <!--reward_money,-->
            <!--</if>-->
            <!--<if test="addTime != null">-->
                <!--add_time,-->
            <!--</if>-->
            <!--<if test="updateTime != null">-->
                <!--update_time,-->
            <!--</if>-->
        <!--</trim>-->
        <!--<trim prefix="values (" suffix=")" suffixOverrides=",">-->
            <!--<if test="recommenderId != null">-->
                <!--#{recommenderId,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="inviteeid != null">-->
                <!--#{inviteeid,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="isdeal != null">-->
                <!--#{isdeal,jdbcType=TINYINT},-->
            <!--</if>-->
            <!--<if test="isauthenticate != null">-->
                <!--#{isauthenticate,jdbcType=TINYINT},-->
            <!--</if>-->
            <!--<if test="rewardMoney != null">-->
                <!--#{rewardMoney,jdbcType=BIGINT},-->
            <!--</if>-->
            <!--<if test="addTime != null">-->
                <!--#{addTime,jdbcType=TIMESTAMP},-->
            <!--</if>-->
            <!--<if test="updateTime != null">-->
                <!--#{updateTime,jdbcType=TIMESTAMP},-->
            <!--</if>-->
        <!--</trim>-->
    <!--</insert>-->
  <select id="countInviteeAndReward" resultType="java.util.HashMap" parameterType="java.lang.String">

    SELECT count(id) AS inviteeNum,SUM(reward_money) AS rewardMoney FROM wx_user_recommend WHERE  recommenderId=#{userId}
  </select>

   <sql id="sqlRecommendListByCondition">
       FROM
       wx_user_recommend wxu

       LEFT JOIN user u ON u.user_id = wxu.recommenderId

       WHERE 1=1

       <if test="userName != '' and userName != null">
           AND (
           u.user_name like CONCAT('%', #{userName}, '%')
           OR u.user_id like CONCAT('%', #{userName}, '%')
           )
       </if>
   </sql>

  <select id="countRecommendList" resultType="java.lang.Integer" parameterType="java.util.HashMap">
       SELECT
           count(DISTINCT(wxu.recommenderId)) <include refid="sqlRecommendListByCondition"/>
  </select>
  <select id="getRecommendList" resultType="com.jusfoun.hookah.core.domain.vo.WXUserRecommendVo" parameterType="java.util.HashMap">
        SELECT
            u.user_id AS userId,
            u.user_name AS userName,
            u.user_type AS userType,
            u.mobile,
            count(wxu.id) AS inviteeNum,
            sum(wxu.reward_money) AS rewardMoney,
            (
                SELECT
                    count(wxur.id)
                FROM
                    wx_user_recommend wxur
                WHERE
                    wxur.recommenderId = wxu.recommenderId
                AND wxur.isdeal = #{isdeal}
            ) AS isdealNum
        <include refid="sqlRecommendListByCondition"/>

        GROUP BY wxu.recommenderId
        ORDER BY rewardMoney DESC

  </select>
    <select id="selectByInviteeId" parameterType="java.lang.String" resultMap="BaseResultMap">

          SELECT * FROM wx_user_recommend WHERE inviteeId = #{inviteeId}
    </select>

    <update id="updateByInviteeidSelective" parameterType="com.jusfoun.hookah.core.domain.WxUserRecommend" >
        update wx_user_recommend
        <set >
            <if test="recommenderid != null" >
                recommenderId = #{recommenderid,jdbcType=VARCHAR},
            </if>
            <if test="isdeal != null" >
                isdeal = #{isdeal,jdbcType=BIT},
            </if>
            <if test="isauthenticate != null" >
                isauthenticate = #{isauthenticate,jdbcType=BIT},
            </if>
            <if test="rewardMoney != null" >
                reward_money = #{rewardMoney,jdbcType=BIGINT},
            </if>
            <if test="addTime != null" >
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where inviteeId = #{inviteeid}
    </update>
    <select id="selectRecommendByRecommenderId" resultType="com.jusfoun.hookah.core.domain.vo.WXUserRecommendVo" parameterType="java.lang.String">
         SELECT
            u.user_id AS userId,
            u.user_name AS userName,
            u.user_type AS userType,
            u.mobile,
            count(wxu.id) AS inviteeNum,
            sum(wxu.reward_money) AS rewardMoney,
            (
                SELECT
                    count(wxur.id)
                FROM
                    wx_user_recommend wxur
                WHERE
                    wxur.recommenderId = wxu.recommenderId
                AND wxur.isdeal = 1
            ) AS isdealNum
             FROM
       wx_user_recommend wxu

       LEFT JOIN user u ON u.user_id = wxu.recommenderId

       WHERE wxu.recommenderId=#{recommenderId}

    </select>

    <sql id="sqlRecommendDetailsByRecommenderId">
          FROM wx_user_recommend wur
          LEFT JOIN user u ON  wur.inviteeId=u.user_id
          WHERE wur.recommenderId=#{recommenderId}
    </sql>
    <select id="countRecommendDetailsByRecommenderId"  resultType="java.lang.Integer" parameterType="java.util.HashMap">
          SELECT COUNT(id)

        <include refid="sqlRecommendDetailsByRecommenderId"/>
    </select>

    <select id="findRecommendDetailsByRecommenderId" resultType="com.jusfoun.hookah.core.domain.vo.WXUserRecommendVo" parameterType="java.util.HashMap">
        SELECT
            wur.isdeal,
            wur.isauthenticate,
            u.reg_time  AS regTime,
            u.user_id AS userId,
            u.user_name AS userName,
            u.user_type AS userType,
            u.mobile
              <include refid="sqlRecommendDetailsByRecommenderId"/>

        ORDER BY ${order} ${sort}

    </select>

</mapper>