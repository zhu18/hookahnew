<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


  <!--
      这是一个标准的 SHIRO 安全配置
      注意OAuth的URL配置:   /oauth/** = anon
  -->

  <!--
      使用MD5 进行密码的加密
  -->
  <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    <property name="hashAlgorithmName" value="MD5"/>
    <!--<property name="storedCredentialsHexEncoded" value="false"/>-->
  </bean>

  <!--
      扩展的 SHIRO Realm
      使用JDBC实现, 并添加 逻辑删除 (archived = 0) 的处理
  -->
  <bean class="com.jusfoun.hookah.oauth2server.security.UsernameAndPasswordShiroRealm" id="jdbcRealm">
    <property name="credentialsMatcher" ref="credentialsMatcher"/>
  </bean>

  <!--
      使用基于内存的缓存 SHIRO 相关数据
  -->
  <bean class="org.apache.shiro.cache.MemoryConstrainedCacheManager" id="shiroCacheManager"/>

  <!-- 会话ID生成器 -->
  <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

  <!-- 会话Cookie模板 -->
  <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    <constructor-arg value="hookah_oauth2_sid"/>
    <!--<property name="domain" value="ziroot.app"/>-->
    <property name="httpOnly" value="true"/>
    <property name="maxAge" value="-1"/>
  </bean>

  <!-- 会话DAO -->
  <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
    <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
  </bean>
  <!-- 会话管理器 -->
  <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    <property name="sessionIdUrlRewritingEnabled" value="false" />
    <property name="globalSessionTimeout" value="1800000"/>
    <property name="deleteInvalidSessions" value="true"/>
    <property name="sessionValidationSchedulerEnabled" value="true"/>
    <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>-->
    <property name="sessionDAO" ref="sessionDAO"/>
    <property name="sessionIdCookieEnabled" value="true"/>
    <property name="sessionIdCookie" ref="sessionIdCookie"/>
    <!--<property name="sessionListeners" ref="mySessionListener"/>-->
  </bean>

  <!--
      SHIRO SecurityManager 配置
  -->
  <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
    <property name="realm" ref="jdbcRealm"/>
    <property name="cacheManager" ref="shiroCacheManager"/>
    <property name="sessionManager" ref="sessionManager"/>
  </bean>

  <!--<bean id="logout" class="com.jusfoun.hookah.oauth2server.web.filter.SystemLogoutFilter">-->
    <!--<property name="redirectUrl" value="http://localhost:9000/" />-->
  <!--</bean>-->

  <!--
      SHIRO安全机制拦截器 Filter实现, 注意id必须与 web.xml 中的 shiroFilter 一致
  -->
  <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/login"/>
    <property name="successUrl" value="http://www.hookah.app/login"/>
    <property name="unauthorizedUrl" value="/unauthorized"/>
    <property name="filterChainDefinitions">
      <value>
        /favicon.ico = anon
        /static/** = anon
        /druid* = anon
        /druid/** = anon
        /login = anon
        /reg = anon
        /captcha = anon
        /unauthorized = anon
        # OAuth anon
        /oauth/** = anon
        /user/** = anon
        /userInfo* = anon
        /clients* = anon
        /client/** = anon
        /logout = logout
        # admin role
        #/admin/** = authc, role["Admin"]
        #user permissions
        /user/list = authc, perms["user:list"]
        /user/create = authc, perms["user:create"]
        # everything else requires authentication:
        /** = authc
      </value>
    </property>
  </bean>
</beans>